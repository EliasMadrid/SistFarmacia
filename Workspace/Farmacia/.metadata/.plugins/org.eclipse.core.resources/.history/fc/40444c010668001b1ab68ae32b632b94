package br.com.farmacia.bean;

import java.sql.SQLException;
import java.util.ArrayList;

import javax.faces.bean.ManagedBean;
import javax.faces.bean.ViewScoped;
import javax.faces.model.ListDataModel;

import br.com.farmacia.DAO.FornecedoresDAO;
import br.com.farmacia.domain.Fornecedores;
import br.com.farmacia.util.JSFUtil;

@ManagedBean(name ="MBFornecedores")
@ViewScoped

public class FornecedoresBean {
	
	private Fornecedores fornecedores;	
	private ArrayList<Fornecedores>itens;
	
	
	public ArrayList<Fornecedores> getItens() {
		return itens;
	}

	public void setItens(ArrayList<Fornecedores> itens) {
		this.itens = itens;
	}
	private ArrayList<Fornecedores>itensFiltrados;
	
	public Fornecedores getFornecedores() {
		return fornecedores;
	}

	public void setFornecedores(Fornecedores fornecedores) {
		this.fornecedores = fornecedores;
	}
	public ArrayList<Fornecedores> getItensFiltrados() {
		return itensFiltrados;
	}

	public void setItensFiltrados(ArrayList<Fornecedores> itensFiltrados) {
		this.itensFiltrados = itensFiltrados;
	}
    



@PostConstruct
public void prepararPesquisa() {
	
	try {
		FornecedoresDAO fdao= new FornecedoresDAO();
	    itens = fdao.listar();
		
		
	} catch (ClassNotFoundException e) {	
		e.printStackTrace();
	} catch (SQLException e) {	
		JSFUtil.adicionarMensagemErro("ex.getMessage()");
		e.printStackTrace();
	}
	
}

public void preparaNovo() {
    fornecedores = new Fornecedores();
}



public void novo() {
	
	try {
		FornecedoresDAO fdao= new FornecedoresDAO();
		fdao.salvar(fornecedores);
		
		itens = fdao.listar();
		
		JSFUtil.adicionarMensagemSucesso("Fornecedor salvo com suscesso!");
		
	} catch (ClassNotFoundException e) {
		
		e.printStackTrace();
	} catch (SQLException e) {
		JSFUtil.adicionarMensagemErro("ex.getMessage()");
		// TODO Auto-generated catch block
		e.printStackTrace();
	}
  	
}

public void prepararExcluir() {
	fornecedores = itens.getRowData();
	 
}
public void excluir() {
	try {
		FornecedoresDAO fdao= new FornecedoresDAO();
		fdao.excluir(fornecedores);
		
		// codigo para atualizar a lista
		
		ArrayList<Fornecedores>lista = fdao.listar();
		itens = new ListDataModel<Fornecedores>(lista);
		
		JSFUtil.adicionarMensagemSucesso("Fornecedor excluido com suscesso!");
		
	} catch (ClassNotFoundException e) {
		
		e.printStackTrace();
	} catch (SQLException e) {
		JSFUtil.adicionarMensagemErro("Não é possível excluir um fornecedor que tenha produto associado");
		// TODO Auto-generated catch block
		e.printStackTrace();
	}
	 
}

public void prepararEditar() {
	fornecedores = itens.getRowData();
	 
}
public void editar() {
	try {
		FornecedoresDAO fdao= new FornecedoresDAO();
		fdao.editar(fornecedores);
		
		// codigo para atualizar a lista
		
		ArrayList<Fornecedores>lista = fdao.listar();
		itens = new ListDataModel<Fornecedores>(lista);
		
		JSFUtil.adicionarMensagemSucesso("Fornecedor editado com suscesso!");
		
	} catch (ClassNotFoundException e) {
		
		e.printStackTrace();
	} catch (SQLException e) {
		JSFUtil.adicionarMensagemErro("ex.getMessage()");
		// TODO Auto-generated catch block
		e.printStackTrace();
	}
	 
}

}
